// En este bloque devolvemos una función: esta función.
const el_tipo = ({
    del: elemento,
    es_de_un: tipo,
    o_no_es: se_quiere_saber_si_no_es
}) => {
    const tipos = [
        "texto",
        "número",
        "lista"
    ]

    si (tipo !== indefinido && tipo !== nulo) {
        si (!tipos.includes(tipo)) {
            // imprimimos el siguiente error:
            consola.rastrear(
                "Se está intentando verificar un tipo desconocido.",
            )

            retornar
        }
    }

    si (
        // el tipo de el elemento es «texto»,
        typeof elemento === "string"
    ) {
        si (tipo !== indefinido) {
            si (tipo === "texto") {
                si (se_quiere_saber_si_no_es) {
                    retornar falso
                }

                retornar verdadero
            }

            si (tipo !== "texto") {
                si (se_quiere_saber_si_no_es) {
                    retornar verdadero
                }

                retornar falso
            }
        }

        retornar "texto"
    }

    si (
        // el tipo de el elemento es «número»,
        typeof elemento === "number"
    ) {
        si (tipo !== indefinido) {
            si (tipo === "número") {
                si (se_quiere_saber_si_no_es) {
                    retornar falso
                }

                retornar verdadero
            }

            si (tipo !== "número") {
                si (se_quiere_saber_si_no_es) {
                    retornar verdadero
                }

                retornar falso
            }
        }

        retornar "número"
    }

    si (
        // el tipo de el elemento es «lista»,
        (
            typeof elemento === "object" &&
            elemento !== nulo
        ) &&
        (
            elemento.constructor.name === "Object" ||
            elemento.constructor.name === "Array"
        )
    ) {
        si (tipo !== indefinido) {
            si (tipo === "lista") {
                si (se_quiere_saber_si_no_es) {
                    retornar falso
                }

                retornar verdadero
            }

            si (tipo !== "lista") {
                si (se_quiere_saber_si_no_es) {
                    retornar verdadero
                }

                retornar falso
            }
        }

        retornar "lista"
    }
}

exportar default (
    oración,
) => {
    const identificador = Object.keys(oración)
    const valor = Object.values(oración)

    const elemento = valor[0]
    const tipo = valor[1]
    let se_quiere_saber_si_no_es = falso

    si (identificador[1] !== indefinido) {
        si (identificador[1].startsWith('no')) {
            se_quiere_saber_si_no_es = verdadero
        }
    }

    retornar el_tipo({
        del: elemento,
        es_de_un: tipo,
        o_no_es: se_quiere_saber_si_no_es
    })
}
